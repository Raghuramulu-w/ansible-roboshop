- name: catalogue install
  hosts: catalogue
  become: yes
  tasks:
   - name: enable nodejs
     ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y 
   - name: install catalogue
     ansible.builtin.package:
      name: nodejs
      state: present
   - name: user add
     ansible.builtin.user:
      name: roboshop
   - name: make directory
     ansible.builtin.file:
      path: /app
      state: directory
   - name: download application
     ansible.builtin.get_url:
      url:  https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp   
   - name: unzip the application
     ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes
   - name: npm installing
     ansible.builtin.command: npm install 
     args:
       chdir: /app
   - name: copy catalogueservice
     ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service
   - name: demonloading
     ansible.builtin.systemd_service:
      daemon_reload: true
   - name: copy mongo repo
     ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo
   - name: install mongorepo
     ansible.builtin.package:
      name: mongodb-org-shell 
      state: present
   - name: checking connection and counting catagiries products
     ansible.builtin.command:  mongo --host mongodb.daws76s.fun --quiet --eval 'db=db.getSiblingDB("catalogue");db.products.count()'
     register: product_count
   - name: printing count
     ansible.builtin.debug:
      msg: " count is {{product_count}}"
   - name: load catalogue
     ansible.builtin.command: mongo --host mongodb.daws76s.fun < /app/schema/catalogue.js
     when: product_count.stdout==0
   - name: restart and enable catalogue
     ansible.builtin.service:
      name: catalogue
      state: restarted
      enabled: yes