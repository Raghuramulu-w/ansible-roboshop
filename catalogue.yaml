- name: catalogue install
  hosts: catalogue
  become: yes
  tasks:
   - name: enabling and disabling nodejs
     ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y
   - name: install nodejs
     ansible.builtin.package:
      name: nodejs
      state: present
   - name: user add
     ansible.builtin.user:
      name: roboshop
   - name: create directory
     ansible.builtin.file:
      name: /app
      state: directory
   - name: install application
     ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp
   - name: unzip
     ansible.builtin.unarchive:
       src: /tmp/catalogue.zip
       dest: /app
       remote_src: yes
   - name: npminstall
     ansible.builtin.command: npm install
     args:
      chdir: /app
   - name: copying service
     ansible.builtin.copy:
       src: catalogue.service
       dest: /etc/systemd/system/catalogue.service
   - name: demon reload
     ansible.builtin.systemd_service:
       daemon_reload: true
   - name: copy mongodb 
     ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo
   - name: install mongo client
     ansible.builtin.package:
      name: mongodb-org-shell
      state: present
   - name: get the categories count
     ansible.builtin.command: mongo --host mongodb.daws76s.fun --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
     register: product_count

   - name: print the count
     ansible.builtin.debug:
      msg: "product count: {{product_count}}"

   - name: load catalogue data
     ansible.builtin.command: mongo --host mongodb.daws76s.fun < /app/schema/catalogue.js
     when: product_count.stdout == "0" # keep double quotes

   - name: start and enable catalogue
     ansible.builtin.service:
      name: catalogue
      state: restarted
      enabled: yes