- name: user configaration
  hosts: user
  become: yes
  tasks:
    - name: enable disable nodejs
      ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y
    - name: install nodejs
      ansible.builtin.dnf:
       name: nodejs
       state: present
    - name: user adding
      ansible.builtin.user:
       name: roboshop
    - name: creating directory
      ansible.builtin.file:
       path: /app
       state: directory
    - name: download application
      ansible.builtin.get_url:
       url: https://roboshop-builds.s3.amazonaws.com/user.zip
       dest: /tmp
    - name: unzip the file
      ansible.builtin.unarchive:
       src: /tmp/user.zip
       dest: /app
       remote_src: yes
    - name: install npm
      ansible.builtin.command: npm install
      args:
       chdir: /app

    - name: copying user.service
      ansible.builtin.copy:
       src: user.service
       dest: /etc/systemd/system/user.service
    - name: daemonreload
      ansible.builtin.systemd_service:
       daemon_reload: true
    - name: copying mongo repo
      ansible.builtin.copy:
       src: mongo.repo
       dest: /etc/yum.repos.d/mongo.repo
    - name: loading mongo client
      ansible.builtin.package:
        name: mongodb-org-shell 
        state: present
    - name:  product count
      ansible.builtin.command: mongo --host mongodb.daws76s.fun --quiet --eval 'db = db.getSiblingDB("users") ; db.users.count()' 
      register: users_count
    - name: printing count of users
      ansible.builtin.debug:
       msg: " product count is {{users_count}}"
    - name: load schema
      ansible.builtin.command: mongo --host mongodb.daws76s.fun < /app/schema/user.js
      when: users_count.stdout == "0"
    - name: enable and start
      ansible.builtin.service:
       name: user
       enabled: yes
       state: restarted
    